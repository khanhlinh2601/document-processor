var a=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var l=(o,e)=>{for(var s in e)a(o,s,{get:e[s],enumerable:!0})},d=(o,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of m(e))!f.call(o,t)&&t!==s&&a(o,t,{get:()=>e[t],enumerable:!(r=g(e,t))||r.enumerable});return o};var p=o=>d(a({},"__esModule",{value:!0}),o);var u={};l(u,{handler:()=>v});module.exports=p(u);var c=(t=>(t[t.DEBUG=0]="DEBUG",t[t.INFO=1]="INFO",t[t.WARN=2]="WARN",t[t.ERROR=3]="ERROR",t))(c||{}),n=class o{static{this.logLevel=1}constructor(e){this.context=e}static setLogLevel(e){if(typeof e=="string"){let s=e.toUpperCase();c[s]!==void 0&&(o.logLevel=c[s])}else o.logLevel=e}static initializeFromEnvironment(e){e&&o.setLogLevel(e)}formatMessage(e){return`[${new Date().toISOString()}] [${this.context}] ${e}`}debug(e,...s){o.logLevel<=0&&console.debug(this.formatMessage(e),...s)}info(e,...s){o.logLevel<=1&&console.info(this.formatMessage(e),...s)}warn(e,...s){o.logLevel<=2&&console.warn(this.formatMessage(e),...s)}error(e,s,...r){o.logLevel<=3&&console.error(this.formatMessage(e),s,...r)}};var i=new n("SQSConsumerHandler"),v=async(o,e)=>{i.info(`Processing ${o.Records.length} messages from SQS`);for(let s of o.Records)try{await y(s)}catch(r){throw i.error(`Error processing message ${s.messageId}`,r),r}i.info("Successfully processed all messages")};async function y(o){try{let e=JSON.parse(o.body);i.info(`Processing document from bucket: ${e.bucketName}, key: ${e.objectKey}`,{messageId:o.messageId,timestamp:e.timestamp}),await new Promise(s=>setTimeout(s,200)),i.info(`Successfully processed document: ${e.objectKey}`)}catch(e){throw i.error("Failed to process message",e),e}}0&&(module.exports={handler});
